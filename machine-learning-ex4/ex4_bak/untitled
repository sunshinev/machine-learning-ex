
https://help.sap.com/viewer/9d346683b0084da2938be8a285c0c27a/1905/en-US/8b9e95cf866910148348c3bcab4be0b6.html


客户购买过程概要

1. Registered Customer 已注册顾客

条件：之前在store登陆过，并且注册了所有信息，用于checkout过程
步骤：
1. 搜索产品
2. 获取产品详情
3. 添加商品到购物车
4. 获取顾客的 access token
5. 执行checkout 收银
6. 显示顾客订单
7. 退出

需要按照定义的顺序来请求接口
匿名用户
1. 搜索具体产品
2. 获取产品的code
3. 创建空的购物车，并且返回购物车的guid
4. 添加产品的code到guid的购物车
5. 登录授权获取access token
6. 分配匿名的购物车给用户，并且返回这个购物车的code
7. 获取购物车包含的产品
8. 获取当前用户的addresses   （如果这个没有注册，这个地方会跳出到Register吗）
9. 设置某个地址为当前配送地址
10. 获取配送模式列表
11. 设置pg作为当前配送模式
12. 获取上次使用的信用卡支付信息
13. 给购物车绑定支付方式
14. 批准购物车，并且安排订单
15. 获取用户的订单列表
16. 获取某个订单的信息

2. Register Customer 注册顾客

条件：客户没有在store进行注册

步骤：
1. 注册新的顾客并且获取access token
2. 顾客创建new address
3. 搜索某个产品
4. 获取产品详情
5. 创建购物车
6. 添加商品到购物车
7. 付款
8. 生成订单
9. 展示订单

请求流
1. 获取access token 用于注册用户
2. 注册新用户
3. 获取token 用于请求
4. 客户创建地址
5. 搜索商品
6. 获取商品详情
7. 创建空的购物车 （这里不需要将匿名购物车分配了）
8. 添加商品到购物车
9. 设置配送地址
10. 获取配送模式
11. 设置配送模式
12. 创建购物车支付信息 （新注册用户没有支付信息）
13. 批准购物车
14. 获取订单列表
15. 获取订单信息


3. Pick up in store 店内取货

条件：用户已注册（未注册用户，无法店内取货？）

步骤：
1. 获取access token
2. 创建购物车
3. 添加需要店内取货的商品
4. 运行收银，设置“到店取货”模式
5. 展示订单

流程：
1. 获取token
2. 创建空购物车
3. 添加商品到购物车
4. 指定购物车的取货店铺为Nakano
5. 直接添加商品到购物车，并指定取货店铺（3、4可以合并为5么?）
6. 获取一个购物车，包含额外信息，比如提货质量、提货订单分组？？
7. 获取配送模式
8. 设置pickup 作为当前配送模式
9. 获取之前用过的付款信息
10. 给购物车分配付款模式
11. 下单
12. 获取用户订单列表
13. 获取订单信息


4. Pick Up in Store with Store Consolidation
多个商店合并，到店取货

条件：先注册

步骤：
1. 获取token
2. 创建购物车
3. 添加商店里的商品
4. 添加另外一个商店的商品
5. 使用合并商店功能
6. 付款

流程：
1. 获取token
2. 创建空购物车
3. 添加商品到Shinbashi商店
4. 添加商品到Nakano商店
5. 获取购物车信息
6. 返回合并提示，包括一个哪些商品可以再一个商店内同时pickup（每个店铺是分开支付？还是一起支付？线下支付？线上支付？）
7. 设置所有的商品在某个商店获取
8. 获取配送模式
9. 设置pickup 作为当前配送模式
10. 获取之前的支付信息
11. 给购物车设置支付信息
12. 授权购物车，下单

5. Combining Delivery mode with pick up in store

到店取货结合配送模式？ 啥意思，到店取货了还需要配送？意思是线上线下一起呗？

步骤：
1. 获取token
2. 创建购物车
3. 添加一个需要配送的商品
4. 添加需要到店取货的商品
5. 收银
6. 展示订单

流程：
1. 获取token
2. 创建空购物车
3. 添加商品到购物车
4. 添加商品到购物车并指定到店取货的商店
5. 获取购物车包含取货信息
6. 获取当前用户地址
7. 设置配送地址
8. 获取配送模式
9. 给配送的商品，设置pg作为配送模式（这个pg到底是啥，毛保费？）
10. 获取信用卡支付信息
11. 设置支付信息给购物车
12. 批准购物车
13. 获取订单列表
14. 获取某个订单信息


6. Checkout Process 收银过程
（这个是单独将checkout过程拿出来做说明吗？）

条件： 用户已经注册，并且有购物车

步骤：
1. 创建地址，并且设置为配送地址
2. 设置配送模式
3. 创建支付信息
4. 批准购物车
5. 下单

流程：
1. 创建地址
2. 设置地址为配送地址
3. 获取可用的配送模式
4. 设置pg为配送模式
5. 创建支付信息
6. 验证购物车，并下单



7. Checkout with Setting Existing Address and Payment Information for Customer

利用已经存在的地址和支付信息，来进行收银
（所以这个有啥区别？所以，接口就是这么几个接口，然后这只是几种组合规范呗？）

条件：用户已注册，并且有购物车

步骤：
1. 获取配送模式
2. 设置配送地址
3. 设置配送模式
4. 设置支付信息
5. 授权购物车
6. 下单

流程：
1. 获取配送模式，如果没有，返回 no value
2. 获取顾客的地址 （用户在进行注册的时候，进行配置了）
3. 设置地址作为配送地址 
4. 获取配送模式
5. 设置pg作为配送模式
6. 获取支付信息
7. 购物车绑定支付信息
8. 批准购物车

8. Checkout Process with SOP 使用SOP收银

条件：用户已注册，并且有购物车

步骤：
1. 设置配送地址
2. 设置配送模式
3. 获取“创建付款订阅”需要的信息？
4. 直接与支付提供商创建订阅联系
5. 处理支付商的请求，并且创建支付信息
6. 批准购物车


流程：
1. 获取用户地址
2. 获取配送模式
3. 获取直接与支付商户创建订阅联系的信息
4. 与支付商户创建联系
5. 处理支付商户请求，并且创建支付信息
6. 批准购物车
7. 设置地址作为配送地址（？ 这里为什么支付完了，在设置配送地址？）

9. Checkout Process with SOP and Extended Merchant Callback

使用SOP和带有商户回调的结账流程

条件：用户已注册，并且有购物车

步骤：
1. 设置配送地址
2. 设置配送模式
3. 获取创建支付订阅需要的信息
4. 向OCC发起支付商户返回结果，消极请求（?）
5. 移除支付结果信息
6. 获取创建支付订阅需要的信息
7. 向OCC发起支付商户返回结果，积极请求（?）
8. 批准购物车

流程：
这里流程不写了

10. Guest Checkout Scenario with Creating Full Account
创建完整账户的访客购物流程

条件：无

步骤：
1. 搜索商品
2. 获取商品详情
3. 创建购物车
4. 添加商品到购物车
5. 获取token
6. 声明以访客身份
7. 结账
8. 显示订单
9. （可选）是否转换访客为正式用户
10. 登录为客户
11. 获取订单列表

流程：
1. 搜索商品
2. 获取商品详情
3. 创建空购物车
4. 添加商品到购物车
5. 获取token
6. 创建访客用户，并且与当前session关联
7. 创建地址分配到购物车，作为配送地址
8. 获取配送模式
9. 设置pg配送模式
10. 为购物车创建支付
11. 授权购物车
12. 根据密码，转换访客到正式用户，
13. 获取token给新登录的用户
14. 获取订单列表
15. 获取订单详情


11. Guest Checkout Scenario with Checking Order Status
带有订单状态检查的访客结账

条件：无

步骤：
1. 搜索商品
2. 获取商品详情
3. 创建空购物车
4. 添加商品到购物车
5. 创建token
6. 判断是否是访客
7. 执行结账
8. 获取订单信息

流程：
1. 搜索商品
2. 获取商品信息
3. 创建空购物车
4. 添加商品到购物车
5. 获取token
6. 创建新的访客，关联session
7. 当前用户创建地址，并且作为配送地址
8. 获取配送模式
9. 设置pg作为配送模式
10. 为当前购物车创建支付信息
11. 下单，并且将GUID存储
12. 根据GUID获取订单信息（做到访客可以查询订单）

12. Voucher Usage 票券使用

条件：票卷需要在系统中已注册

步骤：
1. 创建空购物车
2. 添加商品
3. 申请凭证？
4. 获取购物车
5. 注册新用户并且获取token
6. 安排购物车给用户
7. 创建新地址
8. 收银
9. 下单
10. 展示订单

流程：
1. 创建空购物车
2. 添加数量为2的商品到购物车
3. 获取购物车内容，最终消费
4. 获取token
5. 申请票券用于购物车
6. 获取购物车信息，现在最终价格并且和票券都列出来了
7. 注册新用户
8. 获取token
9. 将匿名的购物车分配给用户
10. 创建地址，设置为配送地址
11. 设置配送地址
12. 获取配送模式
13. 设置pg为配送模式
14. 获取支付信息
15. 下单
16. 获取订单列表
17. 获取订单信息




13. Cart Merging 购物车合并

条件：一个用户已经注册，并且已经由购物车

步骤：
1. 搜索商品
2. 获取商品详情
3. 创建空购物车
4. 添加商品到购物车
5. 获取token
6. 获取用户的购物车
7. 合并最后修改的购物车，和匿名购物车
8. 获取购物车


流程：
1. 搜索商品
2. 获取商品详情
3. 创建空购物车
4. 添加商品到购物车
5. 获取包含某商品的购物车
6. 获取token
7. 返回用户所有的购物车，第一个购物车是最最后修改的
8. 合并最后更新的购物车和匿名购物车
9. 获取合并后的购物车包含两个产品









